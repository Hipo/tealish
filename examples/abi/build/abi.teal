#pragma version 8


// TODO:
//    need method_signature builtin
//    need abi_return builtin: `log(concat(RETURN_PREFIX, abi_encoded(thing)))
//    need abi_decode/abi_encode to encode/decode arguments into abi types


// if Txn.ApplicationID == 0:
  txn ApplicationID
  pushint 0
  ==
  bz l0_end
  // then:
    // exit(1)
    pushint 1
    return
  l0_end: // end

// switch Txn.OnCompletion:
txn OnCompletion
pushint 0 // NoOp
==
bnz on_call
err // unexpected value

// block on_call
on_call:
  // switch Txn.ApplicationArgs[0]:
  txna ApplicationArgs 0
  method "add(uint64,uin64)uint64"
  ==
  bnz add
  err // unexpected value


// block add
add:
  // int result = inner_add(btoi(Txn.ApplicationArgs[1]), btoi(Txn.ApplicationArgs[2])) [slot 0]
  txna ApplicationArgs 1
  btoi
  txna ApplicationArgs 2
  btoi
  callsub add__func__inner_add
  store 0 // result
  // log(concat(RETURN_PREFIX, itob(result)))
  pushbytes 0x151f7c75 // RETURN_PREFIX
  load 0 // result
  itob
  concat
  log
  // exit(1)
  pushint 1
  return
  
  // func inner_add(a: int, b: int)int:
  add__func__inner_add:
  store 1 // b
  store 2 // a
  // return a + b
  load 2 // a
  load 1 // b
  +
  retsub

